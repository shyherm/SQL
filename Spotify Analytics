# For this project, I downloaded Spotify data from Kaggle. Then I created a table to insert Spotify data into. Finally, I performed analytics on the data using SQL. 

# Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

# Analysis: 

# 1. What is the average danceability by artist and track? 
SELECT ROUND(avg(danceability),2) as avg_danceability, 
  artist_name, 
  track_name
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY avg_danceability DESC;

# 2. Who are the top 10 artists based on popularity? 
SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity DESC
LIMIT 10;

# 3. What artist released the longest song? 
SELECT artist_name, 
  MAX(duration_ms) as song_length
FROM BIT_DB.Spotifydata
ORDER BY song_length DESC;

# 4. What’s the average liveness for the 10 most popular songs? 
SELECT ROUND(AVG(liveness),2) AS avg_liveness, 
  popularity, 
  track_name
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY popularity DESC
LIMIT 10;

# 5. What song has the greatest danceability and energy 
SELECT track_name, 
  MAX(danceability) AS danceability, 
  MAX(energy) AS energy
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY danceability DESC
LIMIT 1; 

# 6. Which songs have “heart” in their title? 
SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
WHERE track_name like '%heart%';

# 7. Which songs start with ‘B’ and have a danceability of 0.7 or greater? 
SELECT artist_name, track_name, danceability
FROM BIT_DB.Spotifydata
WHERE track_name like 'B%'
AND danceability >= 0.7
ORDER BY danceability DESC;

# 8. Which artist appears the most in the Spotify data? 
SELECT DISTINCT (COUNT(id)) AS count_art_name, artist_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY count_art_name DESC
LIMIT 1; 

